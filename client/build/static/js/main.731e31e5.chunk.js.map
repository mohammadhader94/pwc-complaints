{"version":3,"sources":["images/pwc-logo.png","reducers/auth.js","constants/actionTypes.js","reducers/complaintReducer.js","reducers/index.js","api/index.js","components/Complaints/Complaint/Complaint.js","components/Complaints/Complaint/StatusUpdate.js","actions/complaintsActions.js","components/Complaints/Complaints.js","components/Form/ComplaintFormDialog.js","components/Home/UserHome.js","actions/auth.js","components/Form/CreateAdminFormDialog.js","components/Home/AdminHome.js","components/Auth/icon.js","components/Auth/styles.js","components/Auth/Input.js","components/Auth/Auth.js","components/Home/Home.js","components/Navbar/styles.js","components/Navbar/Navbar.js","components/ProtectedRoute/ProtectedRoute.js","components/NotFound/NotFound.js","App.js","index.js"],"names":["module","exports","authReducer","state","authData","action","type","localStorage","setItem","JSON","stringify","data","loading","errors","clear","complaintInitialState","reducers","combineReducers","auth","complaints","complaintState","payload","map","complaint","_id","API","axios","create","baseURL","interceptors","request","use","req","getItem","headers","Authorization","parse","token","fetchComplaintsByUserId","id","get","updateComplaint","updatedComplaint","patch","googleSignIn","formData","post","signIn","signUp","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","MenuProps","readOnly","PaperProps","style","maxHeight","ITEM_HEIGHT","width","categories","getStyles","category","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","Complaint","status","complaintData","classes","useTheme","useState","open","setOpen","handleClose","Container","Button","variant","color","onClick","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","InputProps","autoFocus","label","fullWidth","required","name","value","title","utils","DateFnsUtils","disabled","dateOfIncidence","placeholder","format","locationOfIncidence","multiline","rows","description","FormControl","className","InputLabel","Select","labelId","multiple","applicableCategories","input","renderValue","selected","Chip","key","MenuItem","FormControlLabel","control","Checkbox","checked","hasReportedBefore","labelPlacement","Grid","container","justify","alignItems","item","Typography","DialogActions","StatusUpdate","dispatch","useDispatch","setStatus","component","FormLabel","RadioGroup","aria-label","onChange","event","target","Radio","a","api","console","log","columns","field","render","rowData","Date","toLocaleDateString","index","Complaints","useSelector","user","result","role","toLowerCase","includes","find","col","push","options","actionsColumnIndex","ComplaintFormDialog","creatorName","setComplaintData","handleChange","size","clearable","date","handleDateChange","newComplaint","UserHome","useEffect","router","CreateAdminFormDialog","email","password","firstName","lastName","userData","setUserData","AdminHome","icon","height","viewBox","fill","d","paper","flexDirection","padding","root","avatar","backgroundColor","palette","secondary","main","form","submit","googleButton","marginBottom","Input","half","handleShowPassword","xs","sm","endAdornment","InputAdornment","position","IconButton","initialState","confirmPassword","SignUp","setForm","isSignup","setIsSignup","history","useHistory","showPassword","setShowPassword","googleSuccess","res","profileObj","e","Paper","elevation","Avatar","onSubmit","preventDefault","signin","clientId","renderProps","startIcon","onSuccess","onFailure","alert","cookiePolicy","prevIsSignup","Home","Auth","appBar","borderRadius","justifyContent","heading","textDecoration","image","marginLeft","toolbar","profile","userName","brandContainer","purple","getContrastText","deepPurple","Navbar","setUser","location","useLocation","logout","decode","exp","getTime","AppBar","src","pwcLogo","alt","Toolbar","imageUrl","charAt","Link","to","ProtectedRoute","Component","this","props","pathname","React","NotFound","align","App","path","exact","store","createStore","compose","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.731e31e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pwc-logo.e40bebc8.png\";","import {AUTH, LOGOUT, CREATE_ADMIN} from '../constants/actionTypes';\r\n\r\nconst authReducer = (state = { authData: null }, action) => {\r\n  switch (action.type) {\r\n    case AUTH:\r\n      localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\r\n      return { ...state, authData: action.data, loading: false, errors: null };\r\n    case LOGOUT:\r\n      localStorage.clear();\r\n      return { ...state, authData: null, loading: false, errors: null };\r\n    case CREATE_ADMIN:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","export const AUTH = 'AUTH';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const CREATE_ADMIN = 'CREATE_ADMIN';\r\n\r\nexport const COMPLAINT_CREATE = 'COMPLAINT_CREATE';\r\nexport const COMPLAINT_UPDATE = 'COMPLAINT_UPDATE';\r\nexport const COMPLAINTS_FETCH_BY_USER_ID = 'COMPLAINTS_FETCH_BY_USER_ID';\r\nexport const COMPLAINTS_FETCH = 'COMPLAINTS_FETCH';\r\n","import {\r\n    COMPLAINT_CREATE,\r\n    COMPLAINTS_FETCH_BY_USER_ID,\r\n    COMPLAINTS_FETCH,\r\n    COMPLAINT_UPDATE\r\n} from '../constants/actionTypes';\r\n\r\nconst complaintInitialState = [];\r\n\r\nexport default (complaintState = complaintInitialState, action) => {\r\n    switch (action.type) {\r\n        case COMPLAINTS_FETCH_BY_USER_ID:\r\n            return action.payload;\r\n        case COMPLAINTS_FETCH:\r\n            return action.payload;\r\n        case COMPLAINT_CREATE:\r\n            return [...complaintState, action.payload];\r\n        case COMPLAINT_UPDATE:\r\n            return complaintState.map((complaint) => (complaint._id === action.payload._id ? action.payload : complaint));\r\n        default:\r\n            return complaintState;\r\n    }\r\n};\r\n\r\n","import { combineReducers } from 'redux';\r\n\r\nimport auth from './auth';\r\nimport complaints from './complaintReducer';\r\n\r\nexport const reducers = combineReducers({ auth, complaints });\r\n","import axios from 'axios';\r\n\r\nconst API = axios.create({ baseURL: 'https://pwc-complaint.herokuapp.com' });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem('profile')) {\r\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\r\n  }\r\n\r\n  return req;\r\n});\r\n\r\nexport const fetchComplaints = () => API.get('/complaints');\r\nexport const fetchComplaintsByUserId = (id) => API.get(`/complaints/${id}`);\r\nexport const createComplaint = (newComplaint) => API.post('/complaints', newComplaint);\r\nexport const updateComplaint = (id, updatedComplaint) => API.patch(`/complaints/update/${id}`, updatedComplaint);\r\n\r\nexport const googleSignIn = (formData) => API.post('/user/googleSignIn', formData);\r\nexport const signIn = (formData) => API.post('/user/signin', formData);\r\nexport const signUp = (formData) => API.post('/user/signup', formData);\r\n","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport {makeStyles, useTheme} from \"@material-ui/core\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n    noLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    readOnly: true,\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\nconst categories = [\r\n    'Harassment',\r\n    'Bullying',\r\n    'Body Shaming',\r\n    'Violence',\r\n    'Death threats'\r\n];\r\n\r\nconst getStyles = (category, categories, theme) => {\r\n    return {\r\n        fontWeight:\r\n            categories.indexOf(category) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n};\r\n\r\nconst Complaint = ({complaintData}) => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const getStatusChip = (status) => {\r\n        if(status === \"Dismissed\") {\r\n            return <Chip label=\"Dismissed\" color=\"secondary\"/>\r\n        } else if (status === \"Resolved\"){\r\n            return <Chip label=\"Resolved\" color=\"primary\" />\r\n        } else {\r\n            return <Chip label=\"Pending\"/>\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                View Complaint\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">View Complaint</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        We are sorry you went through a hard time in PWC. Here is your detailed complaint:\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"title\"\r\n                        label=\"Title\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        required\r\n                        name=\"title\"\r\n                        variant=\"outlined\"\r\n                        value={complaintData.title}\r\n                    />\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disabled={true}\r\n                            value={complaintData.dateOfIncidence}\r\n                            placeholder=\"MM/dd/yyyy\"\r\n                            format=\"MM/dd/yyyy\"\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n\r\n                    <TextField\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        id=\"location-of-incidence\"\r\n                        label=\"Location of incidence\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        required\r\n                        name=\"locationOfIncidence\"\r\n                        value={complaintData.locationOfIncidence}\r\n                    />\r\n\r\n                    <TextField\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        id=\"description\"\r\n                        label=\"Description\"\r\n                        multiline\r\n                        rows={4}\r\n                        placeholder=\"Describe here\"\r\n                        fullWidth\r\n                        name=\"description\"\r\n                        value={complaintData.description}\r\n                    />\r\n\r\n                    <div>\r\n                        <FormControl className={classes.formControl} fullWidth>\r\n                            <InputLabel id=\"categories-label\">Categories</InputLabel>\r\n                            <Select\r\n                                labelId=\"categories-label\"\r\n                                id=\"categories\"\r\n                                multiple\r\n                                value={complaintData.applicableCategories}\r\n                                input={<Input id=\"select-multiple-chip\"/>}\r\n                                renderValue={(selected) => (\r\n                                    <div className={classes.chips}>\r\n                                        {selected.map((value) => (\r\n                                            <Chip key={value} label={value} className={classes.chip}/>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {categories.map((category) => (\r\n                                    <MenuItem key={category} value={category}\r\n                                              style={getStyles(category, complaintData.applicableCategories, theme)}>\r\n                                        {category}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={complaintData.hasReportedBefore}\r\n                                           name=\"hasReportedBefore\"/>}\r\n                        label=\"Is this a recurring issue?\"\r\n                        labelPlacement=\"start\"\r\n                        disabled={true}\r\n\r\n                    />\r\n\r\n                    <Container>\r\n                        <Grid container justify=\"center\" alignItems=\"flex-start\" >\r\n                            <Grid item>\r\n                                <Typography variant=\"h3\" >\r\n                                    Status:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item >\r\n                                <Typography variant=\"h3\">\r\n                                    {getStatusChip(complaintData.status)}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Complaint;\r\n","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport {updateComplaint} from \"../../../actions/complaintsActions\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nconst StatusUpdate = ({complaintData}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [status, setStatus] = useState(complaintData.status);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        dispatch(updateComplaint(complaintData._id, {...complaintData, status}));\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setStatus(event.target.value);\r\n    };\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\r\n                Update Status\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Update Status</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Please update the status of the complaint:\r\n                    </DialogContentText>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\">Status</FormLabel>\r\n                        <RadioGroup aria-label=\"status\" name=\"status\" value={status} onChange={handleChange}>\r\n                            <FormControlLabel value=\"Pending\" control={<Radio />} label=\"Pending\" />\r\n                            <FormControlLabel value=\"Resolved\" control={<Radio />} label=\"Resolved\" />\r\n                            <FormControlLabel value=\"Dismissed\" control={<Radio />} label=\"Dismissed\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleSubmit} color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatusUpdate;\r\n","import { COMPLAINT_CREATE, COMPLAINTS_FETCH_BY_USER_ID, COMPLAINTS_FETCH, COMPLAINT_UPDATE } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getComplaints = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchComplaints();\r\n\r\n    dispatch({ type: COMPLAINTS_FETCH, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getComplaintsByUserId = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchComplaintsByUserId(id);\r\n\r\n    dispatch({ type: COMPLAINTS_FETCH_BY_USER_ID, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createComplaint = (complaint) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createComplaint(complaint);\r\n\r\n    dispatch({ type: COMPLAINT_CREATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updateComplaint = (id, complaint) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateComplaint(id, complaint);\r\n\r\n    dispatch({ type: COMPLAINT_UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n","import React from 'react';\r\nimport MaterialTable from \"material-table\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Complaint from \"../Complaints/Complaint/Complaint\";\r\nimport {useSelector} from \"react-redux\";\r\nimport StatusUpdate from \"./Complaint/StatusUpdate\";\r\n\r\n\r\nconst columns = [\r\n    {field: 'title', title: 'Title'},\r\n    {field: 'creatorName', title: 'Creator Name'},\r\n    {\r\n        field: 'dateOfIncidence', title: 'Date', render: rowData =>\r\n            <div>\r\n                {new Date(rowData.dateOfIncidence).toLocaleDateString(\"en-US\")}\r\n\r\n            </div>\r\n    },\r\n    {\r\n        field: 'applicableCategories',\r\n        title: 'Categories',\r\n        render: rowData =>\r\n            <div>\r\n                {rowData.applicableCategories.map((category, index) => {\r\n                    return (\r\n                        <Chip key={index} label={category}/>\r\n                    )\r\n                })}\r\n\r\n            </div>\r\n    },\r\n    {\r\n        field: 'status', title: 'Status', render: rowData => {\r\n            if (rowData.status === \"Dismissed\") {\r\n                return <Chip label=\"Dismissed\" color=\"secondary\"/>\r\n            } else if (rowData.status === \"Resolved\") {\r\n                return <Chip label=\"Resolved\" color=\"primary\"/>\r\n            } else {\r\n                return <Chip label=\"Pending\"/>\r\n            }\r\n        }\r\n    },\r\n    {\r\n        field: 'complaint',\r\n        title: 'View Complaint',\r\n        render: rowData =>\r\n            <div>\r\n                {<Complaint complaintData={rowData}/>}\r\n            </div>\r\n    }\r\n\r\n];\r\n\r\n\r\nconst Complaints = () => {\r\n    const complaints = useSelector((state) => state.complaints);\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const isAdmin = user?.result?.role?.toLowerCase().includes(\"admin\");\r\n    if (isAdmin) {\r\n        if (!columns.find(col => col.field === \"updateStatus\")) {\r\n            columns.push({\r\n                field: 'updateStatus',\r\n                title: 'Update Status',\r\n                render: rowData =>\r\n                    <div>\r\n                        {<StatusUpdate complaintData={rowData}/>}\r\n                    </div>\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{width: '100%'}}>\r\n                <MaterialTable\r\n                    options={{\r\n                        actionsColumnIndex: -1\r\n                    }}\r\n                    columns={columns}\r\n                    data={complaints}\r\n                    title=\"My Complaints\"\r\n                />\r\n            </div>\r\n        </>\r\n\r\n    )\r\n};\r\nexport default Complaints;\r\n","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport {makeStyles, useTheme} from \"@material-ui/core\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {createComplaint} from \"../../actions/complaintsActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n    noLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\nconst categories = [\r\n    'Harassment',\r\n    'Bullying',\r\n    'Body Shaming',\r\n    'Violence',\r\n    'Death threats'\r\n];\r\n\r\nconst getStyles = (category, categories, theme) => {\r\n    return {\r\n        fontWeight:\r\n            categories.indexOf(category) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n};\r\n\r\nconst ComplaintFormDialog = () => {\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    const [complaintData, setComplaintData] = useState({\r\n        title: '',\r\n        locationOfIncidence: '',\r\n        dateOfIncidence: new Date(),\r\n        hasReportedBefore: false,\r\n        applicableCategories: [],\r\n        description: '',\r\n        creatorName: user?.result?.name\r\n    });\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        const value = event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\r\n        setComplaintData({...complaintData, [event.target.name]: value});\r\n    };\r\n\r\n    const handleDateChange = (date) => {\r\n        setComplaintData({...complaintData, dateOfIncidence: date});\r\n    };\r\n\r\n    const handleCategoryChange = (event) => {\r\n        setComplaintData({...complaintData, applicableCategories: event.target.value});\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        dispatch(createComplaint (complaintData));\r\n        setComplaintData({\r\n            title: '',\r\n            locationOfIncidence: '',\r\n            dateOfIncidence: new Date(),\r\n            hasReportedBefore: false,\r\n            applicableCategories: [],\r\n            description: ''\r\n        });\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n                Add Complaint\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add new Complaint</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        We are sorry you went through a hard time in PWC. Feel free to submit a complaint about whatever\r\n                        is bothering you.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"title\"\r\n                        label=\"Title\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        required\r\n                        name=\"title\"\r\n                        value={complaintData.title}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            clearable\r\n                            value={complaintData.dateOfIncidence}\r\n                            placeholder=\"MM/dd/yyyy\"\r\n                            onChange={date => handleDateChange(date)}\r\n                            format=\"MM/dd/yyyy\"\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"location-of-incidence\"\r\n                        label=\"Location of incidence\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        required\r\n                        name=\"locationOfIncidence\"\r\n                        value={complaintData.locationOfIncidence}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"description\"\r\n                        label=\"Description\"\r\n                        multiline\r\n                        rows={4}\r\n                        placeholder=\"Describe here\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        name=\"description\"\r\n                        value={complaintData.description}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <div>\r\n                        <FormControl className={classes.formControl} fullWidth>\r\n                            <InputLabel id=\"categories-label\">Categories</InputLabel>\r\n                            <Select\r\n                                labelId=\"categories-label\"\r\n                                id=\"categories\"\r\n                                multiple\r\n                                value={complaintData.applicableCategories}\r\n                                onChange={handleCategoryChange}\r\n                                input={<Input id=\"select-multiple-chip\"/>}\r\n                                renderValue={(selected) => (\r\n                                    <div className={classes.chips}>\r\n                                        {selected.map((value) => (\r\n                                            <Chip key={value} label={value} className={classes.chip}/>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {categories.map((category) => (\r\n                                    <MenuItem key={category} value={category}\r\n                                              style={getStyles(category, complaintData.applicableCategories, theme)}>\r\n                                        {category}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={complaintData.hasReportedBefore} onChange={handleChange}\r\n                                           name=\"hasReportedBefore\"/>}\r\n                        label=\"Is this a recurring issue?\"\r\n                        labelPlacement=\"start\"\r\n\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleSubmit} color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ComplaintFormDialog;\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport {getComplaintsByUserId} from '../../actions/complaintsActions';\r\nimport Complaints from '../Complaints/Complaints';\r\nimport ComplaintFormDialog from '../Form/ComplaintFormDialog';\r\n\r\nconst UserHome = () => {\r\n    const dispatch = useDispatch();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    useEffect(() => {\r\n        dispatch(getComplaintsByUserId(user.result._id));\r\n    }, [user.result._id, dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <ComplaintFormDialog/>\r\n            </div>\r\n            <div>\r\n                <Complaints/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserHome;\r\n","import {AUTH, CREATE_ADMIN} from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const signin = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.signIn(formData);\r\n\r\n    dispatch({ type: AUTH, data });\r\n\r\n    router.push('/');\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const signup = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.signUp(formData);\r\n\r\n    dispatch({ type: AUTH, data });\r\n\r\n    router.push('/');\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const googleSignIn = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.googleSignIn(formData);\r\n\r\n    dispatch({ type: AUTH, data });\r\n\r\n    router.push('/');\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createAdmin = (formData) => async (dispatch) => {\r\n  try {\r\n    await api.signUp(formData);\r\n\r\n    dispatch({ type: CREATE_ADMIN });\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {createAdmin} from \"../../actions/auth\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nconst CreateAdminFormDialog = () => {\r\n\r\n    const [userData, setUserData] = useState({\r\n        email: '', password: '', firstName: '', lastName: ''\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        setUserData({...userData, [event.target.name]: event.target.value});\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        dispatch(createAdmin({...userData, role: 'admin'}));\r\n        setUserData({\r\n            email: '', password: '', firstName: '', lastName: ''\r\n        });\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Grid container alignItems=\"center\">\r\n            <Grid item>\r\n                <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n                    Create Admin\r\n                </Button>\r\n            </Grid>\r\n            <Grid item>\r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">Create new admin</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Here you can create an admin who have access to update user's complaints status\r\n                        </DialogContentText>\r\n\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            autoFocus\r\n                            id=\"firstName\"\r\n                            label=\"First Name\"\r\n                            type=\"text\"\r\n                            required\r\n                            name=\"firstName\"\r\n                            variant=\"outlined\"\r\n                            value={userData.firstName}\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"lastName\"\r\n                            label=\"Last Name\"\r\n                            type=\"text\"\r\n                            required\r\n                            name=\"lastName\"\r\n                            variant=\"outlined\"\r\n                            value={userData.lastName}\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"email\"\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            required\r\n                            name=\"email\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            value={userData.email}\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            variant=\"outlined\"\r\n                            type=\"password\"\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            value={userData.password}\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={handleSubmit} color=\"primary\">\r\n                            Submit\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default CreateAdminFormDialog;\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport {getComplaints} from '../../actions/complaintsActions';\r\nimport Complaints from '../Complaints/Complaints';\r\nimport CreateAdminFormDialog from \"../Form/CreateAdminFormDialog\";\r\n\r\nconst AdminHome = () => {\r\n    const dispatch = useDispatch();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    useEffect(() => {\r\n        dispatch(getComplaints());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {user.result.role === \"superAdmin\" && <CreateAdminFormDialog/>}\r\n            </div>\r\n            <div>\r\n                <Complaints/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminHome;\r\n","import React from 'react';\r\n\r\nconst icon = () => (\r\n  <svg style={{ width: '20px', height: '20px' }} viewBox=\"0 0 24 24\">\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M21.35,11.1H12.18V13.83H18.69C18.36,17.64 15.19,19.27 12.19,19.27C8.36,19.27 5,16.25 5,12C5,7.9 8.2,4.73 12.2,4.73C15.29,4.73 17.1,6.7 17.1,6.7L19,4.72C19,4.72 16.56,2 12.1,2C6.42,2 2.03,6.8 2.03,12C2.03,17.05 6.16,22 12.25,22C17.6,22 21.5,18.33 21.5,12.91C21.5,11.76 21.35,11.1 21.35,11.1V11.1Z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default icon;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(2),\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  googleButton: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\r\n\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst Input = ({ name, handleChange, label, half, autoFocus, type, handleShowPassword }) => (\r\n  <Grid item xs={12} sm={half ? 6 : 12}>\r\n    <TextField\r\n      name={name}\r\n      onChange={handleChange}\r\n      variant=\"outlined\"\r\n      required\r\n      fullWidth\r\n      label={label}\r\n      autoFocus={autoFocus}\r\n      type={type}\r\n      InputProps={name === 'password' ? {\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton onClick={handleShowPassword}>\r\n              {type === 'password' ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      } : null}\r\n    />\r\n  </Grid>\r\n);\r\n\r\nexport default Input;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport Icon from './icon';\r\nimport { signin, signup, googleSignIn } from '../../actions/auth';\r\nimport useStyles from './styles';\r\nimport Input from './Input';\r\n\r\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\r\n\r\nconst SignUp = () => {\r\n  const [form, setForm] = useState(initialState);\r\n  const [isSignup, setIsSignup] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  const switchMode = () => {\r\n    setForm(initialState);\r\n    setIsSignup((prevIsSignup) => !prevIsSignup);\r\n    setShowPassword(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isSignup) {\r\n      dispatch(signup(form, history));\r\n    } else {\r\n      dispatch(signin(form, history));\r\n    }\r\n  };\r\n\r\n  const googleSuccess = async (res) => {\r\n    const result = res?.profileObj;\r\n\r\n    dispatch(googleSignIn(result, history))\r\n\r\n  };\r\n\r\n  const googleError = () => alert('Google Sign In was unsuccessful. Try again later');\r\n\r\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper className={classes.paper} elevation={3}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            { isSignup && (\r\n            <>\r\n              <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\r\n              <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\r\n            </>\r\n            )}\r\n            <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\r\n            <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\r\n            { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\r\n          </Grid>\r\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n            { isSignup ? 'Sign Up' : 'Sign In' }\r\n          </Button>\r\n          <GoogleLogin\r\n            clientId=\"721714693617-4nv3k1q8jmc29e1ulpruhjbp5h61rmck.apps.googleusercontent.com\"\r\n            render={(renderProps) => (\r\n              <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\r\n                Google Sign In\r\n              </Button>\r\n            )}\r\n            onSuccess={googleSuccess}\r\n            onFailure={googleError}\r\n            cookiePolicy=\"single_host_origin\"\r\n          />\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Button onClick={switchMode}>\r\n                { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\n\r\nimport UserHome from './UserHome';\r\nimport AdminHome from './AdminHome';\r\nimport Auth from \"../Auth/Auth\";\r\n\r\nconst Home = () => {\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    if(!user) {\r\n        return <Auth/>;\r\n    }\r\n    const isAdmin = user?.result?.role?.toLowerCase().includes(\"admin\");\r\n\r\n    return (\r\n        isAdmin ? <AdminHome/> : <UserHome/>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px 50px',\r\n  },\r\n  heading: {\r\n    color: 'black',\r\n    textDecoration: 'none',\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    width: '400px',\r\n  },\r\n  profile: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '400px',\r\n  },\r\n  userName: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  brandContainer: {\r\n    display: 'flex',\r\n    alignItems: 'left',\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\n\r\nimport pwcLogo from '../../images/pwc-logo.png';\r\nimport * as actionType from '../../constants/actionTypes';\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const logout = () => {\r\n    dispatch({ type: actionType.LOGOUT });\r\n\r\n    history.push('/auth');\r\n\r\n    setUser(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    if (token) {\r\n      const decodedToken = decode(token);\r\n\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n    }\r\n\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n  }, [location]);\r\n\r\n  return (\r\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n      <div className={classes.brandContainer}>\r\n        <img className={classes.image} src={pwcLogo} alt=\"icon\" height=\"60\" />\r\n      </div>\r\n      <Toolbar className={classes.toolbar}>\r\n        {user?.result ? (\r\n          <div className={classes.profile}>\r\n            <Avatar className={classes.purple} alt={user?.result.name} src={user?.result.imageUrl}>{user?.result.name.charAt(0)}</Avatar>\r\n            <Typography className={classes.userName} variant=\"h6\">{user?.result.name}</Typography>\r\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\r\n          </div>\r\n        ) : (\r\n          <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","\r\nimport React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass ProtectedRoute extends React.Component {\r\n\r\n    render() {\r\n        const Component = this.props.component;\r\n        const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n        const isAuthenticated = user?.token;\r\n\r\n        return isAuthenticated ? (\r\n            <Component />\r\n        ) : (\r\n            <Redirect to={{ pathname: '/auth' }} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Typography, Paper} from \"@material-ui/core\";\r\n\r\nconst NotFound = () => (\r\n\r\n    <Paper elevation={3}>\r\n        <Typography variant=\"h1\" align=\"center\">\r\n            404\r\n        </Typography>\r\n        <Typography variant=\"h3\" align=\"center\">\r\n            page not found\r\n        </Typography>\r\n        <Typography variant=\"h3\" align=\"center\">\r\n            <Link to=\"/\">\r\n                Go Home\r\n            </Link>\r\n        </Typography>\r\n\r\n    </Paper>\r\n\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport {Container} from '@material-ui/core';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\n\r\nimport Home from './components/Home/Home';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Auth from './components/Auth/Auth';\r\nimport ProtectedRoute from \"./components/ProtectedRoute/ProtectedRoute\";\r\nimport NotFound from \"./components/NotFound/NotFound\";\r\n\r\nconst App = () => (\r\n    <BrowserRouter>\r\n        <Container maxWidth=\"lg\">\r\n            <Navbar/>\r\n            <Switch>\r\n                <ProtectedRoute path=\"/\" exact component={Home}/>\r\n                <Route path=\"/auth\" exact component={Auth}/>\r\n                <Route component={NotFound}/>\r\n            </Switch>\r\n        </Container>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { reducers } from './reducers';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}